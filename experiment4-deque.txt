class Deque
    Begin
        max_size of deque = 6
        queue = [None] * max_size
        front element = -1
        rear element = -1
    
    is the deque full:
        return (self.rear + 1) % self.max_size == self.front

    is the deque empty:
        return self.front == -1

    insert element at front:    
        if deque is full:
            Begin
                Overflow - Cannot insert.
            End    
        if deque is empty:
            Begin
                self.front = self.rear = 0
            End
        else
            Begin
                self.front = (self.front - 1 + self.max_size) % self.max_size
            End
        self.queue[self.front] = value
       
    delete element at the end:
        if deque is empty:
            Begin
                Underflow - Cannot delete.
            End
        if self.front == self.rear:
            Begin
                self.front = self.rear = -1
            End
        else
            Begin
                self.rear = (self.rear - 1 + self.max_size) % self.max_size
            End

    display:
        if self.is_empty:
            Begin
                Deque is empty
            End
        print("Deque contents:")
        while index = self.front
            Begin
                print self.queue[index]
                if index == self.rear
                    Begin
                        break
                        index = (index + 1) % self.max_size
                    End
            print
    End


create Deque

# Insert elements at the front
insert element at start(10)
insert element at start(20)
insert element at start(30)
insert element at start(40)
insert element at start(50)
insert element at start(60)

insert element at start(70)

display dequeue

delete element from the end
delete element from the end

display dequeue

delete element from the end
delete element from the end
delete element from the end
delete element from the end

delete element from the end
